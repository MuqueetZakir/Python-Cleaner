set -E
trap cleanup SIGINT SIGTERM ERR EXIT

cleanup() {
	trap - SIGINT SIGTERM ERR EXIT
}

setup_colors() {
	if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
		NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
	else
		NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
	fi
}

log_msg() {
  [[ -z "$dry_run" ]] && echo >&2 -e "${1-}"
}

die() {
	log_msg "$1"
	exit "${2-1}"
}

parse_params() {
	while :; do
		case "${1-}" in
			-h | --help) usage ;;
			-v | --verbose) set -x ;;
			-d | --dry-run) dry_run=true ;;
			--no-color) NO_COLOR=1 ;;
			-u | --update) update=true ;;
			-?*) die "Unknown option: $1" ;;
			*) break ;;
		esac
		shift
	done
}

delete_paths() {
  [[ "$dry_run" ]] && return
  for path in "${@}"; do
    [[ -d "$path" || -f "$path" ]] && rm -rfv "$path"
  done
}

delete_caches() {
  log_msg "Deleting cache for $1..."
  delete_paths "${@:2}"
}

collect_paths() {
  path_list+=("$@")
}

sudo -v

while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

clear_system_cache() {
  delete_caches "System Cache" \
    /Volumes/*/.Trashes/* ~/.Trash/* /Library/Caches/* /System/Library/Caches/* \
    ~/Library/Caches/* /private/var/folders/*/*/*/* /private/var/log/asl/*.asl \
    ~/Library/Application\ Support/MobileSync/Backup/*
}

clear_logs() {
  delete_caches "System Logs" \
    /Library/Logs/* ~/Library/Logs/* ~/Library/Containers/*/Logs/*
}

clear_app_caches() {
  [[ -d ~/Library/Logs/JetBrains ]] && delete_caches "JetBrains Logs" ~/Library/Logs/JetBrains/*
  [[ -d ~/Library/Application\ Support/Google/Chrome ]] && delete_caches "Chrome Cache" ~/Library/Application\ Support/Google/Chrome/Default/Application\ Cache/*
}

clear_dev_caches() {
  delete_caches "Xcode Cache" \
    ~/Library/Developer/Xcode/DerivedData/* ~/Library/Developer/Xcode/Archives/* \
    ~/Library/Developer/Xcode/iOS\ Device\ Logs/*
  [[ -d ~/.gradle ]] && delete_caches "Gradle Cache" ~/.gradle/caches
}

update_and_cleanup_tools() {
  if command -v brew &>/dev/null; then
    [[ "$update" == true ]] && { log_msg "Updating brew..."; brew update &>/dev/null; }
    delete_paths "$(brew --cache)"
    [[ "$dry_run" ]] || { brew cleanup -s &>/dev/null; brew tap --repair &>/dev/null; }
  fi

  [[ -z "$dry_run" && $(command -v npm) ]] && { log_msg "Cleaning npm cache..."; npm cache clean --force &>/dev/null; }
}

parse_params "$@"
setup_colors

clear_system_cache
clear_logs
clear_app_caches
clear_dev_caches
update_and_cleanup_tools

if [ "$dry_run" ]; then
  log_msg "Dry run complete. Approximate space to be freed."
else
  log_msg "${GREEN}Cleanup complete!${NOFORMAT}"
fi
